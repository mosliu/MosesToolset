/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.liuxuan.UI;

import java.awt.Font;
import java.awt.Image;
import java.beans.PropertyVetoException;
import java.io.IOException;
import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.plaf.FontUIResource;
import net.liuxuan.Tools.EsafeNet.JIFUI_EST_UninstallCode;
import net.liuxuan.Tools.Unitcoverter.JIFUI_UnitConverter;
import net.liuxuan.UI.DataHolder.DataHolder;
import net.liuxuan.UI.DataHolder.MapDataHolder;
import net.liuxuan.UI.JIF_UIs.JIF_OX2SDU;
import net.liuxuan.UI.JIF_UIs.JIF_SerialSetWindow;
import net.liuxuan.UI.component.GUIPrintStream;
import net.liuxuan.UI.component.JDesktop;
import net.liuxuan.device.VACVBS.JIF_DrawChart_vacvbs;
import net.liuxuan.device.W3060.JIF_ExportDatabase_w3060;
import net.liuxuan.device.w3330.JIF_DrawChart_w3330;
import net.liuxuan.device.w3330.JIF_ExportDatabase_w3330;
import org.slf4j.LoggerFactory;

/**
 *
 * @author Moses
 */
public class MDIUI extends javax.swing.JFrame {

    /**
     * Creates new form MDIUI
     */
    public MDIUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        desktopPane = createDesktopPane();
        jPanel_Console = new javax.swing.JPanel();
        jScrollPane_Console = new javax.swing.JScrollPane();
        jTextArea_output = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        jMenu_file = new javax.swing.JMenu();
        jMenuItem_save = new javax.swing.JMenuItem();
        jMenuItem_load = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_exit = new javax.swing.JMenuItem();
        jMenu_settings = new javax.swing.JMenu();
        jMenuItem_SerialCommPort = new javax.swing.JMenuItem();
        jCheckBoxMenuItem_OutPutWindow = new javax.swing.JCheckBoxMenuItem();
        jMenu_devices = new javax.swing.JMenu();
        jMenu_W3330 = new javax.swing.JMenu();
        jMenuItem_w3330_ChartDraw = new javax.swing.JMenuItem();
        jMenuItem_w3330_dataExporter = new javax.swing.JMenuItem();
        jMenu_W3060 = new javax.swing.JMenu();
        jMenuItem_w3060_dataExporter = new javax.swing.JMenuItem();
        jMenu_VACVBS = new javax.swing.JMenu();
        jMenuItem_VACVBS_ChartDraw = new javax.swing.JMenuItem();
        jMenu_Sensors = new javax.swing.JMenu();
        jMenuItem_sduOx2 = new javax.swing.JMenuItem();
        jMenu_Tools = new javax.swing.JMenu();
        jMenuItem_UnitConvert = new javax.swing.JMenuItem();
        jMenuItem_EST_Uninstall = new javax.swing.JMenuItem();
        jMenu_help = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("数据分析系统 v1.09");
        setPreferredSize(new java.awt.Dimension(1020, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        desktopPane.setPreferredSize(new java.awt.Dimension(800, 400));
        jScrollPane1.setViewportView(desktopPane);

        jPanel_Console.setBorder(javax.swing.BorderFactory.createTitledBorder("系统信息"));

        jTextArea_output.setColumns(20);
        jTextArea_output.setRows(5);
        jScrollPane_Console.setViewportView(jTextArea_output);

        javax.swing.GroupLayout jPanel_ConsoleLayout = new javax.swing.GroupLayout(jPanel_Console);
        jPanel_Console.setLayout(jPanel_ConsoleLayout);
        jPanel_ConsoleLayout.setHorizontalGroup(
            jPanel_ConsoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane_Console)
        );
        jPanel_ConsoleLayout.setVerticalGroup(
            jPanel_ConsoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane_Console, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
        );

        jMenu_file.setMnemonic('f');
        jMenu_file.setText("File");

        jMenuItem_save.setText("Save");
        jMenuItem_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_saveActionPerformed(evt);
            }
        });
        jMenu_file.add(jMenuItem_save);

        jMenuItem_load.setText("Load");
        jMenuItem_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_loadActionPerformed(evt);
            }
        });
        jMenu_file.add(jMenuItem_load);
        jMenu_file.add(jSeparator1);

        jMenuItem_exit.setMnemonic('x');
        jMenuItem_exit.setText("Exit");
        jMenuItem_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_exitActionPerformed(evt);
            }
        });
        jMenu_file.add(jMenuItem_exit);

        menuBar.add(jMenu_file);

        jMenu_settings.setText("Settings");

        jMenuItem_SerialCommPort.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/TheSphericalIconSet/png/24/connect.png"))); // NOI18N
        jMenuItem_SerialCommPort.setText("SerialCommPort");
        jMenuItem_SerialCommPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SerialCommPortActionPerformed(evt);
            }
        });
        jMenu_settings.add(jMenuItem_SerialCommPort);

        jCheckBoxMenuItem_OutPutWindow.setText("ConsoleLog");
        jCheckBoxMenuItem_OutPutWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem_OutPutWindowActionPerformed(evt);
            }
        });
        jMenu_settings.add(jCheckBoxMenuItem_OutPutWindow);

        menuBar.add(jMenu_settings);

        jMenu_devices.setText("Devices");

        jMenu_W3330.setText("W3/330");

        jMenuItem_w3330_ChartDraw.setText("DrawChart");
        jMenuItem_w3330_ChartDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_w3330_ChartDrawActionPerformed(evt);
            }
        });
        jMenu_W3330.add(jMenuItem_w3330_ChartDraw);

        jMenuItem_w3330_dataExporter.setText("Data Exporter");
        jMenuItem_w3330_dataExporter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_w3330_dataExporterActionPerformed(evt);
            }
        });
        jMenu_W3330.add(jMenuItem_w3330_dataExporter);

        jMenu_devices.add(jMenu_W3330);

        jMenu_W3060.setText("W3/060");

        jMenuItem_w3060_dataExporter.setText("Data Exporter");
        jMenuItem_w3060_dataExporter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_w3060_dataExporterActionPerformed(evt);
            }
        });
        jMenu_W3060.add(jMenuItem_w3060_dataExporter);

        jMenu_devices.add(jMenu_W3060);

        jMenu_VACVBS.setText("VAC-VBS");
        jMenu_VACVBS.setToolTipText("");

        jMenuItem_VACVBS_ChartDraw.setText("VAC-VBS_ChartDraw");
        jMenuItem_VACVBS_ChartDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_VACVBS_ChartDrawActionPerformed(evt);
            }
        });
        jMenu_VACVBS.add(jMenuItem_VACVBS_ChartDraw);

        jMenu_devices.add(jMenu_VACVBS);

        menuBar.add(jMenu_devices);

        jMenu_Sensors.setText("Sensors");

        jMenuItem_sduOx2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/TheSphericalIconSet/png/24/shield.png"))); // NOI18N
        jMenuItem_sduOx2.setText("Sdu Ox2 Sensor");
        jMenuItem_sduOx2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_sduOx2ActionPerformed(evt);
            }
        });
        jMenu_Sensors.add(jMenuItem_sduOx2);

        menuBar.add(jMenu_Sensors);

        jMenu_Tools.setText("Tools");

        jMenuItem_UnitConvert.setText("UnitConverter");
        jMenuItem_UnitConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_UnitConvertActionPerformed(evt);
            }
        });
        jMenu_Tools.add(jMenuItem_UnitConvert);

        jMenuItem_EST_Uninstall.setText("EST_Uninstall");
        jMenuItem_EST_Uninstall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_EST_UninstallActionPerformed(evt);
            }
        });
        jMenu_Tools.add(jMenuItem_EST_Uninstall);

        menuBar.add(jMenu_Tools);

        jMenu_help.setMnemonic('h');
        jMenu_help.setText("Help");

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        contentMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contentMenuItemActionPerformed(evt);
            }
        });
        jMenu_help.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        jMenu_help.add(aboutMenuItem);

        menuBar.add(jMenu_help);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1028, Short.MAX_VALUE)
            .addComponent(jPanel_Console, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_Console, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem_exitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int option = JOptionPane.showConfirmDialog(this, "确定要退出吗？", " 提示", JOptionPane.OK_CANCEL_OPTION);
        if (JOptionPane.OK_OPTION == option) {
            //保存数据
            savedatas();
            //点击了确定按钮
            System.exit(0);
        } else {
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jCheckBoxMenuItem_OutPutWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem_OutPutWindowActionPerformed
        jPanel_Console.setVisible(!jPanel_Console.isVisible());
        jCheckBoxMenuItem_OutPutWindow.setSelected(jPanel_Console.isVisible());

    }//GEN-LAST:event_jCheckBoxMenuItem_OutPutWindowActionPerformed

    private void jMenuItem_SerialCommPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SerialCommPortActionPerformed
        // JIF_SerialSetWindow
//        this.processWindowEvent(null);
        JIF_SerialSetWindow jif = JIF_SerialSetWindow.getInstance(datas);
        activeWindow(jif);
        jif.setVisible(true);
    }//GEN-LAST:event_jMenuItem_SerialCommPortActionPerformed

    private void jMenuItem_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_loadActionPerformed
        loaddatas();
    }//GEN-LAST:event_jMenuItem_loadActionPerformed

    private void jMenuItem_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_saveActionPerformed
        savedatas();
    }//GEN-LAST:event_jMenuItem_saveActionPerformed

    private void jMenuItem_sduOx2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_sduOx2ActionPerformed
        JIF_OX2SDU jif = JIF_OX2SDU.getInstance(datas);
        activeWindow(jif);
        jif.setVisible(true);
    }//GEN-LAST:event_jMenuItem_sduOx2ActionPerformed

    private void jMenuItem_w3330_ChartDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_w3330_ChartDrawActionPerformed
        JIF_DrawChart_w3330 jif = JIF_DrawChart_w3330.getInstance(datas);
        activeWindow(jif);
        try {
            jif.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MDIUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        jif.setVisible(true);
//        System.out.println(jif.getHeight());
//        System.out.println(jif.getWidth());
    }//GEN-LAST:event_jMenuItem_w3330_ChartDrawActionPerformed

    private void contentMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contentMenuItemActionPerformed

    }//GEN-LAST:event_contentMenuItemActionPerformed

    private void jMenuItem_UnitConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_UnitConvertActionPerformed
        JIFUI_UnitConverter jif = JIFUI_UnitConverter.getInstance(datas);
        activeWindow(jif);
        jif.setVisible(true);
    }//GEN-LAST:event_jMenuItem_UnitConvertActionPerformed

    private void jMenuItem_EST_UninstallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_EST_UninstallActionPerformed
        JIFUI_EST_UninstallCode jif = JIFUI_EST_UninstallCode.getInstance(datas);
        activeWindow(jif);
        jif.setVisible(true);
    }//GEN-LAST:event_jMenuItem_EST_UninstallActionPerformed

    private void jMenuItem_w3330_dataExporterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_w3330_dataExporterActionPerformed
        JIF_ExportDatabase_w3330 jif = JIF_ExportDatabase_w3330.getInstance(datas);
        activeWindow(jif);
        jif.setVisible(true);
    }//GEN-LAST:event_jMenuItem_w3330_dataExporterActionPerformed

    private void jMenuItem_w3060_dataExporterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_w3060_dataExporterActionPerformed
        JIF_ExportDatabase_w3060 jif = JIF_ExportDatabase_w3060.getInstance(datas);
        activeWindow(jif);
        jif.setVisible(true);
    }//GEN-LAST:event_jMenuItem_w3060_dataExporterActionPerformed

    private void jMenuItem_VACVBS_ChartDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_VACVBS_ChartDrawActionPerformed
        JIF_DrawChart_vacvbs jif = JIF_DrawChart_vacvbs.getInstance(datas);
        activeWindow(jif);
        try {
            jif.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MDIUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        jif.setVisible(true);
    }//GEN-LAST:event_jMenuItem_VACVBS_ChartDrawActionPerformed

    public void activeWindow(JIFUI jif) {
        JInternalFrame[] jifs = desktopPane.getAllFrames();
        if (Arrays.asList(jifs).contains(jif)) {
            if (jif.isIcon()) {
                try {
                    jif.setLocation(20, 20);
                    jif.setIcon(false);
                } catch (PropertyVetoException ex) {
                    Logger.getLogger(MDIUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {

            }
        } else {
            desktopPane.add(jif);
            jif.init();
        }
    }

    private void savedatas() {
        datas.save();
    }

    private void loaddatas() {
        datas.load();
    }

    /**
     * 初始化
     *
     * @throws IOException
     */
    private void init() throws IOException, ParseException {
        //界面初始化
//        int buttonIconHeight = 40;
//        int buttonIconWidth = 40;
//        jButton_commsetting.setIcon(produceButtonImageIcon("/icons/TheSphericalIconSet/png/connect.png", buttonIconWidth, buttonIconHeight));
        this.jPanel_Console.setVisible(true);

        this.gpstream = new GUIPrintStream(System.out, this.jTextArea_output, true);
        System.setOut(this.gpstream);

        //数据初始化
        datas = new MapDataHolder();
        loaddatas();
//        

//        URL url = this.getClass().getResource("/images/background/004.jpg");
//        BufferedImage image = ImageIO.read(url);
//        JDesktopPane pane = new JDesktopPane();
//        desktopPane.setBorder(new CentredBackgroundBorder(image));
    }

    /**
     * 生成用于按钮的图片ICON
     *
     * @param file
     * @param buttonIconWidth
     * @param buttonIconHeight
     * @return
     */
    public ImageIcon produceButtonImageIcon(String file, int buttonIconWidth, int buttonIconHeight) {
        URL iconurl = getClass().getResource(file);
        ImageIcon iconcommsetting = new javax.swing.ImageIcon(iconurl);
        Image temp = iconcommsetting.getImage().getScaledInstance(buttonIconWidth,
                buttonIconHeight, iconcommsetting.getImage().SCALE_SMOOTH);
        iconcommsetting = new ImageIcon(temp);
        return iconcommsetting;
    }

    /**
     * 设置背景图
     *
     * @return
     */
    private JDesktopPane createDesktopPane() {
        URL url = this.getClass().getResource("/images/background/005.jpg");
        return new JDesktop(url);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            log.error(ex.getMessage());
//            java.util.logging.Logger.getLogger(MDIUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            log.error(ex.getMessage());
//            java.util.logging.Logger.getLogger(MDIUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            log.error(ex.getMessage());
//            java.util.logging.Logger.getLogger(MDIUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            log.error(ex.getMessage());
//            java.util.logging.Logger.getLogger(MDIUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MDIUI ui = new MDIUI();
                try {
                    ui.init();
                    //最大化
                    ui.setExtendedState(JFrame.MAXIMIZED_BOTH);
                    InitGlobalFont(new Font("宋体", Font.PLAIN, 12));

                    Date today = new Date();
                    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
                    Date afterdate = format.parse("2018-6-02");// Try catch省略了
                    if (today.after(afterdate)) {
                        ui.dispose();
                    } else {
                        ui.setVisible(true);
                    }
                } catch (IOException ex) {
                    log.error(ex.getMessage());
//                    Logger.getLogger(MDIUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    log.error(ex.getMessage());
                    // Logger.getLogger(MDIUI.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
    }

    private static void InitGlobalFont(Font font) {
        FontUIResource fontRes = new FontUIResource(font);
        for (Enumeration<Object> keys = UIManager.getDefaults().keys();
                keys.hasMoreElements();) {
            Object key = keys.nextElement();
            Object value = UIManager.get(key);
            if (value instanceof FontUIResource) {
                UIManager.put(key, fontRes);
            }
        }
    }

    public DataHolder getDatas() {
        return datas;
    }
    //全局数据存放。
    private DataHolder datas;
    private static final org.slf4j.Logger log = LoggerFactory.getLogger(MDIUI.class);
    GUIPrintStream gpstream;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_OutPutWindow;
    private javax.swing.JMenuItem jMenuItem_EST_Uninstall;
    private javax.swing.JMenuItem jMenuItem_SerialCommPort;
    private javax.swing.JMenuItem jMenuItem_UnitConvert;
    private javax.swing.JMenuItem jMenuItem_VACVBS_ChartDraw;
    private javax.swing.JMenuItem jMenuItem_exit;
    private javax.swing.JMenuItem jMenuItem_load;
    private javax.swing.JMenuItem jMenuItem_save;
    private javax.swing.JMenuItem jMenuItem_sduOx2;
    private javax.swing.JMenuItem jMenuItem_w3060_dataExporter;
    private javax.swing.JMenuItem jMenuItem_w3330_ChartDraw;
    private javax.swing.JMenuItem jMenuItem_w3330_dataExporter;
    private javax.swing.JMenu jMenu_Sensors;
    private javax.swing.JMenu jMenu_Tools;
    private javax.swing.JMenu jMenu_VACVBS;
    private javax.swing.JMenu jMenu_W3060;
    private javax.swing.JMenu jMenu_W3330;
    private javax.swing.JMenu jMenu_devices;
    private javax.swing.JMenu jMenu_file;
    private javax.swing.JMenu jMenu_help;
    private javax.swing.JMenu jMenu_settings;
    private javax.swing.JPanel jPanel_Console;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane_Console;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextArea jTextArea_output;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

}
